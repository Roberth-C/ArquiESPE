version: '3.8'

services:
  database:
    image: database:v1
    container_name: database
    build:
      context: ./database
      dockerfile: Dockerfile
    environment:
      POSTGRES_DB: libreria
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin1234
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d libreria"]
      interval: 10s
      retries: 5
    networks:
      - library-network

  user-service:
    image: user-service:v1
    container_name: user-service
    build:
      context: ./user-service
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/libreria
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin1234
    depends_on:
      database:
        condition: service_healthy
    networks:
      - library-network

  loan-service:
    image: loan-service:v1
    container_name: loan-service
    build:
      context: ./loan-service
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/libreria
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin1234
    depends_on:
      database:
        condition: service_healthy
    networks:
      - library-network

  book-service:
    image: book-service:v1
    container_name: book-service
    build:
      context: ./book-service
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/libreria
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin1234
    depends_on:
      database:
        condition: service_healthy
    networks:
      - library-network

  api-gateway:
    image: api-gateway:v1
    container_name: api-gateway
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_APPLICATION_NAME: api-gateway
    depends_on:
      user-service:
        condition: service_started
      loan-service:
        condition: service_started
      book-service:
        condition: service_started
    networks:
      - library-network

  eureka-server:
    image: eureka-server:v1
    container_name: eureka-server
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    depends_on:
      api-gateway:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 15s
      retries: 10
      start_period: 30s
    networks:
      - library-network

  frontend:
    image: frontend:v1
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      eureka-server:
        condition: service_healthy
    networks:
      - library-network

networks:
  library-network:
    driver: bridge
